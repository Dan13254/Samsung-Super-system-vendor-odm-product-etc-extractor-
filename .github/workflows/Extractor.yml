name: Samsung Firmware Extractor

on:
  workflow_dispatch:
    inputs:
      device_model:
        description: 'Samsung Device Model (e.g., SM-A226B)'
        required: true
      csc:
        description: 'CSC (e.g., BTB, EUX, INS)'
        required: true

jobs:
  extract_firmware:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y unzip python3-pip android-sdk-libsparse-utils lz4 util-linux git
          pip3 install --upgrade git+https://github.com/samloader/samloader.git

      - name: Get Latest Firmware Version
        id: firmware_version
        run: |
          FULL_VERSION=$(samloader -m ${{ github.event.inputs.device_model }} -r ${{ github.event.inputs.csc }} checkupdate)
          echo "Firmware Version: $FULL_VERSION"
          echo "FULL_VERSION=$FULL_VERSION" >> $GITHUB_ENV

      - name: Download Samsung Firmware
        run: |
          samloader -m ${{ github.event.inputs.device_model }} -r ${{ github.event.inputs.csc }} \
                    download -v $FULL_VERSION -o firmware.enc

      - name: Decrypt Samsung Firmware
        run: |
          samloader -m ${{ github.event.inputs.device_model }} -r ${{ github.event.inputs.csc }} \
                    decrypt -v $FULL_VERSION -V 2 -i firmware.enc -o firmware.zip

      - name: Extract firmware
        run: |
          unzip firmware.zip -d firmware_extracted

      - name: Extract super.img
        run: |
          find firmware_extracted -name "super.img.*" -exec cat {} + > super.img
          mkdir super_extracted
          img2simg super.img super.raw  # Converts sparse image to raw
          mkdir super_mounted
          sudo mount -o loop super.raw super_mounted || echo "Mount failed, using lpmake extraction"

      - name: Extract super partitions (fallback)
        if: always()
        run: |
          mkdir super_extracted_fallback
          lpmake --extract super.raw --dir super_extracted_fallback || echo "lpmake extraction failed"

      - name: Upload extracted files to GitHub Releases
        uses: ncipollo/release-action@v1
        with:
          tag: firmware-${{ github.event.inputs.device_model }}-${{ env.FULL_VERSION }}
          name: "Extracted Firmware - ${{ github.event.inputs.device_model }} - ${{ env.FULL_VERSION }}"
          artifacts: "super.img,super_extracted/*,super_extracted_fallback/*"
          body: "Extracted firmware for ${{ github.event.inputs.device_model }} - CSC: ${{ github.event.inputs.csc }} - Firmware: ${{ env.FULL_VERSION }}"
          token: ${{ secrets.GITHUB_TOKEN }}
